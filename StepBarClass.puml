@startuml
' !theme blueprint
left to right direction

class StepBar <<component>> {
  + isFormFilling
  + isEdbEditing
  + isEdbApproval
  + isEditing
  + isSigning
  + isApprovalStep
  + hasBackButton
  + hasEditButton
  + hasExitEditButton
  + hasSubmitEditButton
  + hasApproveButton
  + hasReturnButton
  '
  --props--
  # onBack
  # onClear
  # onNext
  # onSubmit: function
  # disableSave: Boolean
  # finalSubmitStep: Boolean
  # requiredLogin: Boolean
  '
  --state--
  ~ exitEditPopup
  ~ savePopup
  ~ saveSuccessPopup
  ~ saveFailPopup
  ~ open
  ~ openSubmittedDialog
  ~ form017OpenSubmittedDialog
  ~ openApprovalDialog
  ~ openLogin
  ~ action
  ~ subFilPopop
  ~ multiSubmitPopup
  '
  --method--
  - handleSaveConfirm()
  - handleNextAction()
  - onSign()
  - onSaveConfirm()
  - onFormSubmit()
  - onFormEdit()
  - onFormApproval()
  - onSign()
  - onDownload()
}



' === Button ===
class PreviewPDF <<Button>> {
    --props--
    # onClick: onDownload() /\nsubFileDownload()
}
class CancelEdit <<Button>> {
    --props--
    # onClick: setExitPopup(true)
}
class Back <<Button>> {
    --props--
    # onClick: onBack(), scrollToTop()
}
class Save <<Button>> {
    --props--
    # onClick: setSavePopup(true)
}
class Next <<Button>> {
    --props--
    # onClick: handleSubmit(handleNextAction, handleErrorAction)
}
class Submit <<Button>> {
    --props--
    # onClick: setOpen(true) /\nonFormSubmit()
}
class Edit <<Button>> {
    --props--
    # onClick: \ndispatch(setCurrentStep(initialStep))
}
class Reply <<Button>> {
    --props--
    # onClick: \nsetAction("return")\nsetOpenApprovalDialog(true)
}
class Reject <<Button>> {
    --props--
    # onClick: \nsetAction("reject")\nsetOpenApprovalDialog(true)
}
class Approval <<Button>> {
    --props--
    #onClick: onFormApproval({ act: "review" })
}
class Sign <<Button>> {
    --props--
    # onClick: setOpen(true)
}
class submitEdited <<Button>> {
    --props--
    # onClick: setMultiSubmitPopup(true)
}


' === Dialog ===
class SigningDialog <<component>> {
    --props--
    # formOpen: open
    # uploadFirst: !isApplicantSigning
    # onSign: onSign()
}
class ExitEdit <<AlertDialog>> {
    --props--
    # closeButton: handleExitClose()
    # confirmButton: handleExitConfirm()
}
class SaveDialog <<AlertDialog>> {
    --props--
    # closeButton: handleSaveClose()
    # confirmButton: handleSaveConfirm()
}
class ApprovalDialog <<component>> {
    --props--
    # formOpen: openApprovalDialog
    # onSubmit: onFormApproval()
}
class MultiSubmitDialog <<AlertDialog>> {
    --props--
    # formOpen: multiSubmitPopup
    # closeButton: handleMultiSubmitClose()
    # confirmButton: redirectToFormA()
}

' === Button display logic ===
StepBar o-- PreviewPDF :isApprovalStep
StepBar o-- CancelEdit :hasExitEditButton
StepBar o-- Back :hasBackButton
StepBar o-- Save :disableSave &&\nisFormFilling &&\nisEmpty(initialStep)
StepBar o-- Next :isFunction(onNext) &&\nisFunction(handleSubmit) &&\nisFunction(onError)
StepBar o-- Submit :finalSubmitStep &&\nisFormFilling &&\n!isApprovalStep
StepBar o-- Edit :hasEditButton &&\nisNotEmpty(initialStep)
StepBar o-- Reply :hasReturnButton
StepBar o-- Reject :hasReturnButton
StepBar o-- Approval :isEdbApproval
StepBar o-- Sign :isSigning 
StepBar o-- submitEdited :hasApproveButton ||\nhasSubmitEditButton


' === Dialog display logic ===
Sign o-- SigningDialog :open
CancelEdit o-- ExitEdit :exitPopup
Save o-- SaveDialog :savePopup
Submit o-- SigningDialog :open
Reply o-- ApprovalDialog 
Reject o-- ApprovalDialog 
submitEdited o-- MultiSubmitDialog :multiSubmitPopup


@enduml
